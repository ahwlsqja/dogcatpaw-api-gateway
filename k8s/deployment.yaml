apiVersion: apps/v1
kind: Deployment
metadata:
  name: dogcatpaw-api-gateway
  namespace: petdid-network
  labels:
    app: dogcatpaw-api-gateway
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dogcatpaw-api-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: dogcatpaw-api-gateway
        version: v1
    spec:
      containers:
      - name: api-gateway
        # TODO: Replace with your actual image registry and tag
        # Example: asia-northeast3-docker.pkg.dev/your-project/dogcatpaw/api-gateway:latest
        # or: your-registry.kr.ncr.ntruss.com/dogcatpaw/api-gateway:latest
        image: dogcatpaw-api-gateway:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP

        # Environment variables from ConfigMap
        envFrom:
        - configMapRef:
            name: dogcatpaw-api-gateway-config
        - secretRef:
            name: dogcatpaw-api-gateway-secret

        # Resource limits and requests
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi

        # Liveness probe - checks if the container is alive
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3

        # Readiness probe - checks if the container is ready to serve traffic
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3

        # Startup probe - gives the app time to start
        startupProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 30

      # Restart policy
      restartPolicy: Always

      # DNS policy
      dnsPolicy: ClusterFirst

      # Security context (optional, but recommended)
      securityContext:
        runAsNonRoot: false
        fsGroup: 1000
